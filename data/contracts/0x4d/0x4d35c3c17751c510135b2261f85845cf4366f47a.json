{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.10;\r\n\r\n/// @title Contract for sending any ERC20 tokens to lots of addresses in batches quickly and efficiently\r\n/// @author The EraSwap Team\r\n/// @notice Due to Ethereum block gas limitations, you can send about 200 in one transaction.\r\n/// @dev For using, you can approve this contract for all the batches amount once and then send individual batches.\r\ncontract BatchSendTokens {\r\n    \r\n    /// @notice This function is more suitable when you have same amount to send to multiple addresses\r\n    /// @param token - address of ERC20 token contract on which transfer transactions need to be sent\r\n    /// @param addressArray - address to whom tokens will be sent\r\n    /// @param amountToEachAddress - amount of tokens which will be sent to all addresses in addressArray\r\n    /// @param totalAmount - amount of total tokens in one batch\r\n    /// @dev Please note that you have to approve this contract as spender for the totalAmount tokens\r\n    function sendTokensBySameAmount(\r\n        ERC20Interface token, \r\n        address[] memory addressArray, \r\n        uint256 amountToEachAddress,\r\n        uint256 totalAmount\r\n    ) public {\r\n        token.transferFrom(msg.sender, address(this), totalAmount);\r\n        uint256 lengthOfArray = addressArray.length;\r\n        for(uint256 i = 0; i < lengthOfArray; i++) {\r\n            token.transfer(addressArray[i], amountToEachAddress);\r\n        }\r\n    }\r\n    \r\n    /// @notice This function is more suitable when you have different amounts to send to multiple addresses\r\n    /// @param token - address of ERC20 token contract on which transfer transactions need to be sent\r\n    /// @param addressArray - address to whom tokens will be sent\r\n    /// @param amountArray - amount that will be sent to addressArray in order\r\n    /// @param totalAmount - amount of total tokens in one batch\r\n    /// @dev Please note that you have to approve this contract as spender for the totalAmount tokens\r\n    function sendTokensByDifferentAmount(\r\n        ERC20Interface token, \r\n        address[] memory addressArray, \r\n        uint256[] memory amountArray,\r\n        uint256 totalAmount\r\n    ) public {\r\n        token.transferFrom(msg.sender, address(this), totalAmount);\r\n        uint256 lengthOfArray = addressArray.length;\r\n        for(uint256 i = 0; i < lengthOfArray; i++) {\r\n            token.transfer(addressArray[i], amountArray[i]);\r\n        }\r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"amountArray\",\"type\":\"uint256[]\"},{\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"sendTokensByDifferentAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"amountToEachAddress\",\"type\":\"uint256\"},{\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"sendTokensBySameAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BatchSendTokens","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://237248fa804dacaa12a85fbbf0616b17de9c12f2b548a6df9b8a9bb42022ae38"}]}