{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract SafeMath {\r\n  uint256 constant public MAX_UINT256 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n  \r\n  function safeAdd(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n    if (x > MAX_UINT256 - y) revert();\r\n    return x + y;\r\n  }\r\n  \r\n  function safeSub(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n    if (x < y) revert();\r\n    return x - y;\r\n  }\r\n  \r\n  function safeMul(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n    if (y == 0) return 0;\r\n    if (x > MAX_UINT256 / y) revert();\r\n    return x * y;\r\n  }\r\n}\r\n\r\ncontract Aunic is SafeMath {\r\n  mapping(address => uint) public balances;\r\n  string public name = \"AUNIC\";\r\n  string public symbol = \"AUC\";\r\n  uint8 public decimals = 18;\r\n  uint256 public totalSupply = 10000000000000000000000000;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n  constructor() public payable { balances[msg.sender] = totalSupply; }\r\n\r\n  function isContract(address ethAddress) private view returns (bool) {\r\n    uint length;\r\n    assembly { length := extcodesize(ethAddress) }\r\n    return (length>0);\r\n  }\r\n\r\n  function transfer(address to, uint value) public returns (bool success) {\r\n    balances[msg.sender] = safeSub(balances[msg.sender], value);\r\n    balances[to] = safeAdd(balances[to], value);\r\n    if(isContract(to)) {\r\n      ITokenRecipient receiver = ITokenRecipient(to);\r\n      receiver.tokenFallback(msg.sender, value);\r\n    }\r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n  function burn(uint256 value) public returns (bool success) {\r\n    balances[msg.sender] = safeSub(balances[msg.sender], value);\r\n    totalSupply = safeSub(totalSupply,value); \r\n    emit Burn(msg.sender, value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address ethAddress) public view returns (uint balance) {\r\n    return balances[ethAddress];\r\n  }\r\n}\r\n\r\ncontract ITokenRecipient {\r\n  function tokenFallback(address from, uint value) public;\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ethAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"Aunic","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://372ce37ea4a3df072ce914f6234ce3e4281ca1be47baad36d09d90d5497ccf14"}]}