{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract Trusti {\r\n    struct Asset {\r\n    string name;\r\n    string datahash;\r\n    address manufacturer;\r\n    bool initialized;    \r\n         }\r\n         \r\n    struct tracking {\r\n    address location;\r\n    string uuid;\r\n          }\r\n    mapping(string => tracking) locations;\r\n    mapping(string  => Asset) private assetStore;\r\n\r\n      event AssetCreate(address manufacturer, string uuid, address location);\r\n      event AssetTransfer(address from, address to, string uuid);\r\n\r\n      function createAsset(string memory name, string memory datahash, string memory uuid) public {\r\n      require(!assetStore[uuid].initialized, \"Asset With This UUID Already Exists\");\r\n \r\n      assetStore[uuid] = Asset(name, datahash, msg.sender,true);\r\n      locations[uuid] = tracking(msg.sender, uuid);\r\n      emit AssetCreate(msg.sender, uuid, msg.sender);\r\n                }\r\n                \r\n       function transferAsset(address to, string memory uuid) public {\r\n         require(locations[uuid].location==msg.sender, \"You are Not Authorized to Transfer This Asset\");\r\n         \r\n        locations[uuid]= tracking(to, uuid);\r\n        emit AssetTransfer(msg.sender, to, uuid);\r\n               }\r\n               \r\n          function getAssetDetails(string memory uuid)public view returns (string memory,string memory,address) {\r\n \r\n               return (assetStore[uuid].name, assetStore[uuid].datahash, assetStore[uuid].manufacturer);\r\n                   }\r\n          function getAssetLocation(string memory uuid)public view returns (address) {\r\n \r\n            return (locations[uuid].location);\r\n                  }\r\n\r\n         \r\n       }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"transferAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"getAssetDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"getAssetLocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"datahash\",\"type\":\"string\"},{\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"createAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"manufacturer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"uuid\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"location\",\"type\":\"address\"}],\"name\":\"AssetCreate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"AssetTransfer\",\"type\":\"event\"}]","ContractName":"Trusti","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://7004973a14f91beb8dca81d3fc88a32541c8e414a6f0a15b8efcfd015168e88c"}]}