{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\n/// @title Blocklogy Certificate Gerneration and Verification powered by EraSwap Academy\r\n/// @author The Team EraSwap\r\n/// @notice This contract is used for generation and verification of Blocklogy Certificate\r\ncontract BlocklogyCertificate {\r\n    struct Certificate {\r\n        uint256 userID;\r\n        string name;\r\n        string course;\r\n        uint256 belt;\r\n        uint256 percentile;\r\n    }\r\n    \r\n    address public superAdmin;\r\n    Certificate[] public certificateDatabase;\r\n  \r\n    mapping(address => bool) public isAdmin;\r\n\r\n    event CertificateGenerated (\r\n        uint256 _certiID,\r\n        uint256 indexed _userId, \r\n        string _name, \r\n        string indexed _course, \r\n        uint256 indexed _belt,\r\n        uint256 _percentile\r\n    );\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin[msg.sender], \"Only Admin assigned by SuperAdmin can use this function\");\r\n        _;\r\n    }\r\n      \r\n    modifier onlySuperAdmin() {\r\n        require(msg.sender == superAdmin, \"Only SuperAdmin can use this function\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        superAdmin = msg.sender;\r\n        isAdmin[msg.sender] = true;\r\n    }\r\n    \r\n    /// @notice Add New Admin to issue certificate by superAdmin\r\n    /// @param _adminAddress will take new admin address input\r\n    function addAdmin(address _adminAddress) public onlySuperAdmin {\r\n        isAdmin[_adminAddress] = true;\r\n    }\r\n    \r\n    /// @notice superAdmin Deletes the existing Admin \r\n    /// @param _adminAddress will take admin address which needs to be removed   \r\n    function removeAdmin(address _adminAddress) public onlySuperAdmin {\r\n        isAdmin[_adminAddress] = false;\r\n    }\r\n    \r\n    /// @notice views the latest certificate number\r\n    /// @return latest certificate number issued by Blocklogy \r\n    function viewLatestCertificateNumber() public view returns (uint256) {\r\n        return certificateDatabase.length-1;\r\n    }\r\n    \r\n    /// @notice views the Total certificate issued\r\n    /// @return total certificate issued by Blocklogy\r\n    function getTotalCertificateCount() public view returns (uint256) {\r\n        return certificateDatabase.length;\r\n    }\r\n    \r\n    /// @notice This function will issue the certificate for the multiple courses on nextgen technologies\r\n    /// @param _userId is the unique ID of student\r\n    /// @param _name inputs the name of student\r\n    /// @param _course inputs the course for which the certificate is issued\r\n    /// @param _belt inputs the belt level of each course in integer\r\n    /// @param _percentile inputs the percentage which student scored in the exam\r\n    /// @return certificate number\r\n    function issueCertificate(\r\n        uint256 _userId, \r\n        string memory _name, \r\n        string memory _course, \r\n        uint256 _belt, \r\n        uint256 _percentile\r\n    ) public onlyAdmin returns (uint256) {\r\n        certificateDatabase.push(Certificate({\r\n            userID: _userId,\r\n            name: _name,\r\n            course: _course,\r\n            belt: _belt,\r\n            percentile: _percentile\r\n        }));\r\n        \r\n        emit CertificateGenerated(\r\n            certificateDatabase.length - 1, \r\n            _userId, \r\n            _name, \r\n            _course, \r\n            _belt, \r\n            _percentile\r\n        );\r\n\r\n        return certificateDatabase.length - 1;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userId\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_course\",\"type\":\"string\"},{\"name\":\"_belt\",\"type\":\"uint256\"},{\"name\":\"_percentile\",\"type\":\"uint256\"}],\"name\":\"issueCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewLatestCertificateNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalCertificateCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificateDatabase\",\"outputs\":[{\"name\":\"userID\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"course\",\"type\":\"string\"},{\"name\":\"belt\",\"type\":\"uint256\"},{\"name\":\"percentile\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_certiID\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_userId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_course\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_belt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_percentile\",\"type\":\"uint256\"}],\"name\":\"CertificateGenerated\",\"type\":\"event\"}]","ContractName":"BlocklogyCertificate","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://46bf743f0b06f3df545ca0bf64bf109a10c48866720e1239c27ee5750493eb0f"}]}