{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Zerion Inc. <https://zerion.io>\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program. If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.6.5;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\n/**\r\n * @title Protocol adapter interface.\r\n * @dev adapterType(), tokenType(), and getBalance() functions MUST be implemented.\r\n * @author Igor Sobolev <sobolev@zerion.io>\r\n */\r\ninterface ProtocolAdapter {\r\n\r\n    /**\r\n     * @dev MUST return \"Asset\" or \"Debt\".\r\n     * SHOULD be implemented by the public constant state variable.\r\n     */\r\n    function adapterType() external pure returns (string memory);\r\n\r\n    /**\r\n     * @dev MUST return token type (default is \"ERC20\").\r\n     * SHOULD be implemented by the public constant state variable.\r\n     */\r\n    function tokenType() external pure returns (string memory);\r\n\r\n    /**\r\n     * @dev MUST return amount of the given token locked on the protocol by the given account.\r\n     */\r\n    function getBalance(address token, address account) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @dev LendingPoolAddressesProvider contract interface.\r\n * Only the functions required for AaveDebtAdapter contract are added.\r\n * The LendingPoolAddressesProvider contract is available here\r\n * github.com/aave/aave-protocol/blob/master/contracts/configuration/LendingPoolAddressesProvider.sol.\r\n */\r\ninterface LendingPoolAddressesProvider {\r\n    function getLendingPool() external view returns (LendingPool);\r\n}\r\n\r\n\r\n/**\r\n * @dev LendingPool contract interface.\r\n * Only the functions required for AaveDebtAdapter contract are added.\r\n * The LendingPool contract is available here\r\n * github.com/aave/aave-protocol/blob/master/contracts/lendingpool/LendingPool.sol.\r\n */\r\ninterface LendingPool {\r\n    function getUserReserveData(address, address) external view returns (uint256, uint256);\r\n}\r\n\r\n\r\n/**\r\n * @title Debt adapter for Aave protocol.\r\n * @dev Implementation of ProtocolAdapter interface.\r\n * @author Igor Sobolev <sobolev@zerion.io>\r\n */\r\ncontract AaveDebtAdapter is ProtocolAdapter {\r\n\r\n    address internal constant PROVIDER = 0x24a42fD28C976A61Df5D00D0599C34c4f90748c8;\r\n\r\n    string public constant override adapterType = \"Debt\";\r\n\r\n    string public constant override tokenType = \"ERC20\";\r\n\r\n    /**\r\n     * @return Amount of debt of the given account for the protocol.\r\n     * @dev Implementation of ProtocolAdapter interface function.\r\n     */\r\n    function getBalance(address token, address account) external view override returns (uint256) {\r\n        LendingPool pool = LendingPoolAddressesProvider(PROVIDER).getLendingPool();\r\n\r\n        (, uint256 debtAmount) = pool.getUserReserveData(token, account);\r\n\r\n        return debtAmount;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"adapterType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AaveDebtAdapter","CompilerVersion":"v0.6.5+commit.f956cc89","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU LGPLv3","SwarmSource":"ipfs://eb2e656ac5a40cc17952a908e0812193e85a421cefafdc6829c4c607477854e8"}]}