{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.4;\r\n\r\ncontract Registry {\r\n    address private minter;\r\n    address private core;\r\n    address private oracleAggregator;\r\n    address private syntheticAggregator;\r\n    address private opiumAddress;\r\n    address private tokenSpender;\r\n    address private wethAddress;\r\n\r\n    address public initializer;\r\n\r\n    modifier onlyInitializer() {\r\n        require(msg.sender == initializer, \"REGISTRY:ONLY_INITIALIZER\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        initializer = msg.sender;\r\n    }\r\n\r\n    // Setters\r\n\r\n    function setMinter(address _minter) external onlyInitializer {\r\n        require(minter == address(0), \"REGISTRY:ALREADY_SET\");\r\n        minter = _minter;\r\n    }\r\n\r\n    function setCore(address _core) external onlyInitializer {\r\n        require(core == address(0), \"REGISTRY:ALREADY_SET\");\r\n        core = _core;\r\n    }\r\n\r\n    function setOracleAggregator(address _oracleAggregator) external onlyInitializer {\r\n        require(oracleAggregator == address(0), \"REGISTRY:ALREADY_SET\");\r\n        oracleAggregator = _oracleAggregator;\r\n    }\r\n\r\n    function setSyntheticAggregator(address _syntheticAggregator) external onlyInitializer {\r\n        require(syntheticAggregator == address(0), \"REGISTRY:ALREADY_SET\");\r\n        syntheticAggregator = _syntheticAggregator;\r\n    }\r\n\r\n    function setOpiumAddress(address _opiumAddress) external onlyInitializer {\r\n        require(opiumAddress == address(0), \"REGISTRY:ALREADY_SET\");\r\n        opiumAddress = _opiumAddress;\r\n    }\r\n\r\n    function setTokenSpender(address _tokenSpender) external onlyInitializer {\r\n        require(tokenSpender == address(0), \"REGISTRY:ALREADY_SET\");\r\n        tokenSpender = _tokenSpender;\r\n    }\r\n\r\n    function setWethAddress(address _wethAddress) external onlyInitializer {\r\n        require(wethAddress == address(0), \"REGISTRY:ALREADY_SET\");\r\n        wethAddress = _wethAddress;\r\n    }\r\n\r\n    function changeOpiumAddress(address _opiumAddress) external {\r\n        require(opiumAddress == msg.sender, \"REGISTRY:ONLY_OPIUM_ADDRESS_ALLOWED\");\r\n        opiumAddress = _opiumAddress;\r\n    }\r\n\r\n    // Getters\r\n\r\n    function getCore() external view returns (address) {\r\n        return core;\r\n    }\r\n\r\n    function getMinter() external view returns (address) {\r\n        return minter;\r\n    }\r\n\r\n    function getOracleAggregator() external view returns (address) {\r\n        return oracleAggregator;\r\n    }\r\n\r\n    function getSyntheticAggregator() external view returns (address) {\r\n        return syntheticAggregator;\r\n    }\r\n\r\n    function getOpiumAddress() external view returns (address) {\r\n        return opiumAddress;\r\n    }\r\n\r\n    function getTokenSpender() external view returns (address) {\r\n        return tokenSpender;\r\n    }\r\n\r\n    function getWethAddress() external view returns (address) {\r\n        return wethAddress;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_syntheticAggregator\",\"type\":\"address\"}],\"name\":\"setSyntheticAggregator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_opiumAddress\",\"type\":\"address\"}],\"name\":\"setOpiumAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWethAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_core\",\"type\":\"address\"}],\"name\":\"setCore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSyntheticAggregator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenSpender\",\"type\":\"address\"}],\"name\":\"setTokenSpender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wethAddress\",\"type\":\"address\"}],\"name\":\"setWethAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_opiumAddress\",\"type\":\"address\"}],\"name\":\"changeOpiumAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenSpender\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracleAggregator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOpiumAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracleAggregator\",\"type\":\"address\"}],\"name\":\"setOracleAggregator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Registry","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://5cf22431091999bcaeda83a3f9c7fa1ccd4c0e82d7624d6c9d690893c0b7ffcc"}]}