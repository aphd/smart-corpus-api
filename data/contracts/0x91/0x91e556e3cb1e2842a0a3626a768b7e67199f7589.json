{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\n// https://github.com/dapphub/ds-pause\r\ncontract DSPauseAbstract {\r\n    function delay() public view returns (uint256);\r\n    function plot(address, bytes32, bytes memory, uint256) public;\r\n    function exec(address, bytes32, bytes memory, uint256) public returns (bytes memory);\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/pot.sol\r\ncontract PotAbstract {\r\n    function drip() external returns (uint256);\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/jug.sol\r\ncontract JugAbstract {\r\n    function file(bytes32, bytes32, uint256) external;\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, address) external;\r\n    function drip(bytes32) external returns (uint256);\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/vat.sol\r\ncontract VatAbstract {\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n}\r\n\r\ncontract SaiMomLike {\r\n    function setCap(uint256) external;\r\n    function setFee(uint256) external;\r\n}\r\n\r\ncontract SpellAction {\r\n    // Provides a descriptive tag for bot consumption\r\n    // This should be modified weekly to provide a summary of the actions\r\n    string  constant public description = \"04/03/2020 MakerDAO Executive Spell\";\r\n\r\n    // The contracts in this list should correspond to MCD core contracts, verify\r\n    //  against the current release list at:\r\n    //     https://changelog.makerdao.com/releases/mainnet/1.0.4/contracts.json\r\n    //\r\n    // Contract addresses pertaining to the SCD ecosystem can be found at:\r\n    //     https://github.com/makerdao/sai#dai-v1-current-deployments\r\n    address constant public MCD_VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\r\n    address constant public MCD_JUG = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;\r\n    address constant public MCD_POT = 0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7;\r\n\r\n    // Many of the settings that change weekly rely on the rate accumulator\r\n    // described at https://docs.makerdao.com/smart-contract-modules/rates-module\r\n    // To check this yourself, use the following rate calculation (example 8%):\r\n    //\r\n    // $ bc -l <<< 'scale=27; e( l(1.08)/(60 * 60 * 24 * 365) )'\r\n    //\r\n    uint256 constant public TWELVE_PCT_RATE = 1000000003593629043335673582;\r\n\r\n    uint256 constant public RAD = 10**45;\r\n    uint256 constant public MILLION = 10**6;\r\n\r\n    function execute() external {\r\n\r\n        // Drip Pot and Jugs prior to all modifications.\r\n        PotAbstract(MCD_POT).drip();\r\n        JugAbstract(MCD_JUG).drip(\"ETH-A\");\r\n        JugAbstract(MCD_JUG).drip(\"BAT-A\");\r\n        JugAbstract(MCD_JUG).drip(\"USDC-A\");\r\n\r\n        // MCD Modifications\r\n\r\n        // Set the USDC stability fee\r\n        // USDC_FEE is a value determined by the rate accumulator calculation (see above)\r\n        //  ex. an 8% annual rate will be 1000000002440418608258400030\r\n        //\r\n        // https://vote.makerdao.com/polling-proposal/qmc2ebl5rbvdq3vcgypyhjshwqakxw9rwwowrvzulpnmho\r\n        //\r\n        // Existing Rate: 16%\r\n        // New Rate: 12%\r\n        uint256 USDC_FEE = TWELVE_PCT_RATE;\r\n        JugAbstract(MCD_JUG).file(\"USDC-A\", \"duty\", USDC_FEE);\r\n\r\n        // Set the Sai debt ceiling for the migration contract\r\n        // SAI_LINE is the number of Dai that can be created with Sai token collateral\r\n        //  ex. a 10 million Dai ETH ceiling will be SAI_LINE = 10000000\r\n        //\r\n        // https://vote.makerdao.com/polling-proposal/qmz4ttjnhbwsmwmlip73hpxsl7uuybk371cgb4kyxyujst\r\n        //\r\n        // Existing Line: 10m\r\n        // New Line: 0\r\n        uint256 SAI_LINE = 0;\r\n        VatAbstract(MCD_VAT).file(\"SAI\", \"line\", SAI_LINE);\r\n\r\n        // Set the global debt ceiling\r\n        //\r\n        // GLOBAL_AMOUNT is the total number of Dai that can be created by all collateral types\r\n        //  as a whole number\r\n        //  ex. a 100 million Dai global ceiling will be GLOBAL_AMOUNT = 100000000\r\n        //\r\n        // subtract 10m from global ceiling due to reduction of SAI DC\r\n        //\r\n        // Existing Ceiling: 123m\r\n        // New Ceiling: 113m\r\n        uint256 GLOBAL_AMOUNT = 113 * MILLION;\r\n        VatAbstract(MCD_VAT).file(\"Line\", GLOBAL_AMOUNT * RAD);\r\n    }\r\n}\r\n\r\ncontract DssSpell {\r\n\r\n    DSPauseAbstract  public pause =\r\n        DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);\r\n    address          public action;\r\n    bytes32          public tag;\r\n    uint256          public eta;\r\n    bytes            public sig;\r\n    uint256          public expiration;\r\n    bool             public done;\r\n\r\n    uint256 constant internal MILLION = 10**6;\r\n\r\n    address constant public SAIMOM = 0xF2C5369cFFb8Ea6284452b0326e326DbFdCb867C;\r\n    uint256 constant SCD_EIGHT_PCT_FEE = 1000000002440418608258400030;\r\n\r\n    constructor() public {\r\n        sig = abi.encodeWithSignature(\"execute()\");\r\n        action = address(new SpellAction());\r\n        bytes32 _tag;\r\n        address _action = action;\r\n        assembly { _tag := extcodehash(_action) }\r\n        tag = _tag;\r\n        expiration = now + 30 days;\r\n    }\r\n\r\n    function description() public view returns (string memory) {\r\n        return SpellAction(action).description();\r\n    }\r\n\r\n    function schedule() public {\r\n        require(now <= expiration, \"This contract has expired\");\r\n        require(eta == 0, \"This spell has already been scheduled\");\r\n        eta = now + DSPauseAbstract(pause).delay();\r\n        pause.plot(action, tag, sig, eta);\r\n\r\n        // NOTE: 'eta' check should mimic the old behavior of 'done', thus\r\n        // preventing these SCD changes from being executed again.\r\n\r\n        // Raise Stability Fee in SCD from to 8% (from 7.5%)\r\n        //\r\n        // https://vote.makerdao.com/polling-proposal/qmuenso3mq7ndchi5qdgyjzt3zwstibabbga64g3npihrh\r\n        // \r\n        // Existing Rate: 7.5%\r\n        // New Rate: 8%\r\n        SaiMomLike(SAIMOM).setFee(SCD_EIGHT_PCT_FEE);\r\n    }\r\n\r\n    function cast() public {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        pause.exec(action, tag, sig, eta);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"SAIMOM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"action\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"contract DSPauseAbstract\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"schedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tag\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DssSpell","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://f57a8b72424c2fdf2e8cb14a292e0b77dd64220789bffead7a26f3dd1267daa0"}]}