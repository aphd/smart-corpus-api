{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2019  MixBytes, LLC\r\n\r\n// Licensed under the Apache License, Version 2.0 (the \"License\").\r\n// You may not use this file except in compliance with the License.\r\n\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND (express or implied).\r\n\r\n// Code taken from https://github.com/ethereum/dapp-bin/blob/master/wallet/wallet.sol\r\n// Audit, refactoring and improvements by github.com/Eenae\r\n\r\npragma solidity ^0.5.0;\r\n\r\ncontract Logging {\r\n    function log(string memory message, uint256 amount, address addr) public;\r\n}\r\n\r\ncontract SharedWalletWithLogging {\r\n\r\n    Logging logger = Logging(0xe21ADf5002f257df1b743F1B03F5F5352DE300e7);\r\n\r\n    uint256 min_initial_deposit = 1 ether;\r\n    uint256 min_deposit = 0.1 ether;\r\n    mapping(address => uint256) public balances;\r\n    address payable public _owner;\r\n    \r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Caller is not the owner\");\r\n        _;\r\n    }    \r\n    \r\n    constructor() public payable {\r\n        _init();\r\n    }\r\n    \r\n    function _init() public payable {\r\n        require(msg.value >= min_deposit);\r\n        _owner = msg.sender; \r\n    }\r\n\r\n    function deposit() public payable {\r\n        require(msg.value >= min_initial_deposit);\r\n        balances[msg.sender] += msg.value;\r\n        \r\n        logger.log('Deposit', msg.value, msg.sender);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public {\r\n        require(balances[msg.sender] >= amount);\r\n\r\n        balances[msg.sender] -= amount;\r\n        msg.sender.transfer(amount);\r\n\r\n        logger.log('Withdrawal', amount, msg.sender);\r\n    }\r\n    \r\n    function ownerWithdraw() public onlyOwner {\r\n        _owner.transfer(address(this).balance);\r\n        \r\n        logger.log('OwnerWithdrawal', address(this).balance, msg.sender);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_init\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"SharedWalletWithLogging","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://cbd76c61f7586e6e3150cf8ea14640385f5409b5e9ce460db54796f16c1b23db"}]}