{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.8;\r\n\r\ninterface Pack {\r\n    function purchaseFor(address user, uint16 packCount, address referrer) external payable;\r\n}\r\n\r\ncontract PackPurchaser {\r\n    \r\n    function purchaseFor(Pack pack, uint cost, address[] memory owners, uint16[] memory packCounts) public payable {\r\n        for (uint i = 0; i < owners.length; i++) {\r\n            pack.purchaseFor.value(cost * packCounts[i])(owners[i], packCounts[i], address(0));\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"pack\",\"type\":\"address\"},{\"name\":\"cost\",\"type\":\"uint256\"},{\"name\":\"owners\",\"type\":\"address[]\"},{\"name\":\"packCounts\",\"type\":\"uint16[]\"}],\"name\":\"purchaseFor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"PackPurchaser","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://eeee976700ecb2d1d471e3b6559485064b8bb52e9e7da57f68412be794fdf157"}]}