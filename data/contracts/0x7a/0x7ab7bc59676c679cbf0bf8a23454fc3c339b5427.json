{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >0.4.99 <0.6.0;\r\n\r\ncontract Username {\r\n  string public constant version = '0.3.0';\r\n  event Updated(address indexed user, string indexed username);\r\n\r\n  mapping(address => string) public username;\r\n  mapping(string => address) public owner;\r\n  mapping(string => string) public caseMap;\r\n\r\n  string constant availableChrs = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n  string constant symbols = \"_-.\";\r\n\r\n  bytes bAvailableChrs = bytes(availableChrs);\r\n  bytes bSymbols = bytes(symbols);\r\n\r\n  function getUsername(address addr) public view returns (string memory) {\r\n    return caseMap[username[addr]];\r\n  }\r\n\r\n  function getOwner(string memory username) public view returns (address) {\r\n    return owner[toLower(username)];\r\n  }\r\n\r\n  function isSymbol(bytes1 chr) internal view returns (bool result) {\r\n    for (uint8 i = 0; i < bSymbols.length; i++) {\r\n      if (chr == bSymbols[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function isAlphaNumeric(bytes1 chr) internal view returns (bool result) {\r\n    for (uint8 i = 0; i < bAvailableChrs.length; i++) {\r\n      if (chr == bAvailableChrs[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function toLower(string memory str) public view returns (string memory) {\r\n    bytes memory bStr = bytes(str);\r\n\t\tbytes memory bLower = new bytes(bStr.length);\r\n    for (uint8 i = 0; i < bStr.length; i++) {\r\n      if (uint8(bStr[i]) > 65 && uint8(bStr[i]) <= 90) {\r\n        bLower[i] = bytes1(uint8(bStr[i]) + 32);\r\n      } else {\r\n        bLower[i] = bStr[i];\r\n      }\r\n    }\r\n    return string(bLower);\r\n  }\r\n\r\n  function validate(string memory str) public view returns (bool result) {\r\n    bytes memory bStr = bytes(str);\r\n    if (bStr.length < 1 || bStr.length > 20) {\r\n      return false;\r\n    }\r\n    bool continuousFlag = false;\r\n    for (uint8 i = 0; i < bStr.length; i++) {\r\n      if (isSymbol(bStr[i])) {\r\n        if (i == 0 || i == bStr.length - 1 || continuousFlag) {\r\n          return false;\r\n        }\r\n        continuousFlag = true;\r\n      } else if (isAlphaNumeric(bStr[i])) {\r\n        continuousFlag = false;\r\n      } else  {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function update(string memory _username) public {\r\n    string memory lowerUsername = toLower(_username);\r\n    if (owner[lowerUsername] != address(0) && owner[lowerUsername] != msg.sender) {\r\n      revert(\"Username already used\");\r\n    }\r\n\r\n    require(validate(lowerUsername));\r\n\r\n    string memory oldUserName = username[msg.sender];\r\n\r\n    owner[oldUserName] = address(0);\r\n    owner[lowerUsername] = msg.sender;\r\n\r\n    username[msg.sender] = lowerUsername;\r\n\r\n    caseMap[oldUserName] = \"\";\r\n    caseMap[lowerUsername] = _username;\r\n\r\n    emit Updated(msg.sender, _username);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"username\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"string\"}],\"name\":\"caseMap\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"str\",\"type\":\"string\"}],\"name\":\"toLower\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getUsername\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"str\",\"type\":\"string\"}],\"name\":\"validate\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"string\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"username\",\"type\":\"string\"}],\"name\":\"Updated\",\"type\":\"event\"}]","ContractName":"Username","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://bf806ea221c338c2b1e357d5dcb60149e1e272c544759e88b24f960c7530b82f"}]}