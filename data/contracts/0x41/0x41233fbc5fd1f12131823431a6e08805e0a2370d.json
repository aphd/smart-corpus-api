{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ninterface Token {\r\n  function balanceOf(address who) external view returns (uint256);\r\n}\r\n\r\ncontract BalanceChecker {\r\n  function() external payable {\r\n    revert(\"BalanceChecker does not accept payments\");\r\n  }\r\n\r\n  function balances(address[] users, address[] tokens) external view returns (uint256[] memory) {\r\n    uint256[] memory addrBalances = new uint256[](tokens.length * users.length);\r\n    for(uint i = 0; i < users.length; i++) {\r\n      for (uint j = 0; j < tokens.length; j++) {\r\n        uint addrIdx = j + tokens.length * i;\r\n        if (tokens[j] != address(0x0)) {\r\n          Token erc20 = Token(tokens[j]);\r\n          addrBalances[addrIdx] = erc20.balanceOf(users[i]);\r\n        } else {\r\n          addrBalances[addrIdx] = users[i].balance;\r\n        }\r\n      }  \r\n    }\r\n  \r\n    return addrBalances;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"users\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BalanceChecker","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://3b5d459516779cf82a6bad1cbe72fa6c12c0854ae1a47aa51a052ea5c9251062"}]}